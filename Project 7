import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 1. DATA LOADING
print("### 1. Data Loading ###")

# Load the built-in Titanic dataset from Seaborn
titanic_df = sns.load_dataset('titanic')

# Display initial info and the first few rows
print("\n--- Initial Data Info ---")
titanic_df.info()

print("\n--- Dataset Head ---")
print(titanic_df.head())
print("-" * 30)


# 2. EXPLORATORY DATA ANALYSIS (EDA)
print("\n### 2. Exploratory Data Analysis ###")

# Set the style for plots
sns.set_style("darkgrid")

# Create a figure to hold our subplots
plt.figure(figsize=(16, 6))

# --- Plot 1: Survival Rate by Gender ---
plt.subplot(1, 3, 1) # (rows, columns, plot_number)
sns.barplot(x='sex', y='survived', data=titanic_df, palette='viridis')
plt.title('Survival Rate by Gender')
plt.ylabel('Survival Rate')
plt.xlabel('Gender')


# --- Plot 2: Survival Rate by Passenger Class ---
plt.subplot(1, 3, 2)
sns.barplot(x='pclass', y='survived', data=titanic_df, palette='plasma')
plt.title('Survival Rate by Passenger Class')
plt.ylabel('Survival Rate')
plt.xlabel('Passenger Class')


# --- Plot 3: Age Distribution ---
# We'll drop missing age values for this visualization
age_data = titanic_df['age'].dropna()
plt.subplot(1, 3, 3)
sns.histplot(age_data, bins=30, kde=True, color='coral')
plt.title('Age Distribution of Passengers')
plt.xlabel('Age')
plt.ylabel('Frequency')

# Show the plots
plt.tight_layout()
plt.show()

# A more detailed age distribution: split by survival status
plt.figure(figsize=(10, 6))
sns.histplot(data=titanic_df, x='age', hue='survived', multiple='stack', bins=30, palette='RdBu_r')
plt.title('Age Distribution by Survival Status')
plt.xlabel('Age')
plt.show()

print("\nEDA visualizations have been generated.")
print("-" * 30)


# 3. FEATURE ENGINEERING
print("\n### 3. Feature Engineering ###")

# Create a new feature 'FareGroup' to group passengers by ticket price.
# We'll use pandas.cut to bin the 'fare' column into categories.
fare_bins = [0, 20, 50, 100, 600]
fare_labels = ['Low', 'Medium', 'High', 'Very High']
titanic_df['FareGroup'] = pd.cut(titanic_df['fare'], bins=fare_bins, labels=fare_labels, right=False)

print("\n--- DataFrame with New 'FareGroup' Feature ---")
# Show survival rate by the new fare group
print(titanic_df[['FareGroup', 'survived']].groupby(['FareGroup'], observed=False).mean())
print(titanic_df.head())
print("-" * 30)


# 4. PREDICTION
print("\n### 4. Basic Survival Prediction ###")

# Create a simple prediction based on a rule:
# The EDA showed that females had a much higher survival rate.
# Let's use this as our simple model: predict 'survived' for all females.

# Create a new column for our prediction
titanic_df['Prediction'] = 0 # Assume no one survives initially

# Apply the rule: if sex is 'female', change Prediction to 1
titanic_df.loc[titanic_df['sex'] == 'female', 'Prediction'] = 1

print("\n--- Prediction based on gender ---")
print(titanic_df[['sex', 'survived', 'Prediction']].head(10))

# Calculate the accuracy of our simple model
correct_predictions = (titanic_df['survived'] == titanic_df['Prediction']).sum()
total_passengers = len(titanic_df)
accuracy = correct_predictions / total_passengers

print(f"\nSimple Model Accuracy: {accuracy:.2%}")
print(f"Our model correctly predicted the fate of {correct_predictions} out of {total_passengers} passengers.")
print("-" * 30)
